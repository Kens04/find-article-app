generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String          @id @db.Uuid
  name           String?
  email          String          @unique
  avatarUrl      String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  favorites      Favorite[]
  sharedArticles SharedArticle[]
  todos          Todo[]

  @@map("users")
}

model Todo {
  id          String     @id @default(uuid()) @db.Uuid
  title       String
  url         String
  text        String?
  status      TodoStatus @default(UNREAD)
  category    String?
  dueDate     DateTime
  isPublic    Boolean    @default(false)
  userId      String     @db.Uuid
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  completedAt DateTime?
  favorites   Favorite[]
  user        User       @relation(fields: [userId], references: [id])

  @@map("todos")
}

model Favorite {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  todoId    String   @db.Uuid
  createdAt DateTime @default(now())
  todo      Todo     @relation(fields: [todoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, todoId])
  @@map("favorites")
}

model SharedArticle {
  id         String   @id @default(uuid()) @db.Uuid
  title      String
  url        String
  comment    String?
  sharedById String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sharedBy   User     @relation(fields: [sharedById], references: [id])

  @@map("shared_articles")
}

enum TodoStatus {
  UNREAD
  READING
  COMPLETED
}
